name: publish

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*'

jobs:
  release:
    name: Create draft release
    runs-on: ubuntu-latest
    steps:
    - name: Get tag
      id: get_tag
      run: echo ::set-output name=tag::$(echo $GITHUB_REF | cut -d / -f 3)
    - name: Create draft release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_tag.outputs.tag }}
        release_name: ${{ steps.get_tag.outputs.tag }}
        body: |
          Platform  | Package | SHA256 Checksum
          --        | --      | --
          Windows   | [tippy-win-x64.zip](https://github.com/nervosnetwork/tippy/releases/download/${{ steps.get_tag.outputs.tag }}/tippy-win-x64.zip) | <code>TODO</code>
          macOS     | [Tippy.dmg](https://github.com/nervosnetwork/tippy/releases/download/${{ steps.get_tag.outputs.tag }}/Tippy.dmg) | <code>TODO</code>
          Linux     | [tippy-linux-x64.tar.gz](https://github.com/nervosnetwork/tippy/releases/download/${{ steps.get_tag.outputs.tag }}/tippy-linux-x64.tar.gz) | <code>TODO</code>
        draft: true
        prerelease: false
    - name: Output upload URL file
      run: echo "${{ steps.create_release.outputs.upload_url }}" > upload_url.txt
    - name: Save upload URL file
      uses: actions/upload-artifact@v1
      with:
        name: upload_url
        path: upload_url.txt

  publish-linux:
    name: Publish Linux
    needs: [release]
    runs-on: ubuntu-latest

    steps:
    - name: Load upload URL file
      uses: actions/download-artifact@v1
      with:
        name: upload_url
    - name: Get upload URL
      id: get_upload_url
      run: |
        value=`cat upload_url/upload_url.txt`
        echo ::set-output name=upload_url::$value
      env:
        TAG_REF_NAME: ${{ github.ref }}
        REPOSITORY_NAME: ${{ github.repository }}
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: Fetch ckb binaries
      run: ./tools/download-binaries.sh linux
    - name: Build
      run: dotnet build -c Release
    - name: Publish dotnet
      run: |
        dotnet publish src/Tippy/Tippy.csproj -c Release -r linux-x64 /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true -o ./tippy-linux-x64
        chmod +x ./tippy-linux-x64/BinDeps/linux/ckb*
    - name: Archive files
      run: tar -cvzf tippy-linux-x64.tar.gz tippy-linux-x64
    - name: Generate checksum
      run: sha256sum tippy-linux-x64.tar.gz > tippy-linux-x64-sha256.txt
    - name: Upload binary
      id: upload-release-binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_path: tippy-linux-x64.tar.gz
        asset_name: tippy-linux-x64.tar.gz
        asset_content_type: application/tar+gzip
    - name: Upload checksum
      id: upload-release-checksum
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_path: tippy-linux-x64-sha256.txt
        asset_name: tippy-linux-x64-sha256.txt
        asset_content_type: text/plain

  publish-win:
    name: Publish Windows
    needs: [release]
    runs-on: ubuntu-latest

    steps:
    - name: Load upload URL file
      uses: actions/download-artifact@v1
      with:
        name: upload_url
    - name: Get upload URL
      id: get_upload_url
      run: |
        value=`cat upload_url/upload_url.txt`
        echo ::set-output name=upload_url::$value
      env:
        TAG_REF_NAME: ${{ github.ref }}
        REPOSITORY_NAME: ${{ github.repository }}
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: Fetch ckb binaries
      run: ./tools/download-binaries.sh win
    - name: Build
      run: dotnet build -c Release
    - name: Publish dotnet
      run: |
        dotnet publish src/Tippy/Tippy.csproj -c Release -r win-x64 /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true -o ./tippy-win-x64
        chmod +x ./tippy-win-x64/BinDeps/win/ckb*
    - name: Archive files
      uses: papeloto/action-zip@v1
      with:
        files: ./tippy-win-x64
        dest: tippy-win-x64.zip
    - name: Generate checksum
      run: sha256sum tippy-win-x64.zip > tippy-win-x64-sha256.txt
    - name: Upload binary
      id: upload-release-binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_path: tippy-win-x64.zip
        asset_name: tippy-win-x64.zip
        asset_content_type: application/zip
    - name: Upload checksum
      id: upload-release-checksum
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_path: tippy-win-x64-sha256.txt
        asset_name: tippy-win-x64-sha256.txt
        asset_content_type: text/plain

  publish-mac:
    name: Publish macOS
    needs: [release]
    runs-on: macos-latest

    steps:
    - name: Load upload URL file
      uses: actions/download-artifact@v1
      with:
        name: upload_url
    - name: Get upload URL
      id: get_upload_url
      run: |
        value=`cat upload_url/upload_url.txt`
        echo ::set-output name=upload_url::$value
      env:
        TAG_REF_NAME: ${{ github.ref }}
        REPOSITORY_NAME: ${{ github.repository }}
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - name: Fetch ckb binaries
      run: ./tools/download-binaries.sh mac
    - name: Build
      run: dotnet build -c Release
    - name: Install create-dmg
      env:
        HOMEBREW_NO_INSTALL_CLEANUP: 1
      run: brew install create-dmg
    - name: Create macOS app
      run: ./tools/osx/package.sh
    - name: Sign and create dmg
      env:
        CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
        KEYCHAIN_PASSWORD: WdDsypJi3*ZE
      run: ./tools/osx/sign.sh
    - name: Notarize dmg
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
      run: ./tools/osx/notarize.sh
    - name: Staple dmg
      run: xcrun stapler staple Tippy.dmg
    - name: Generate checksum
      run: shasum -a 256 Tippy.dmg > tippy-osx-x64-sha256.txt
    - name: Upload binary
      id: upload-release-binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_path: Tippy.dmg
        asset_name: Tippy.dmg
        asset_content_type: application/x-apple-diskimage
    - name: Upload checksum
      id: upload-release-checksum
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
        asset_path: tippy-osx-x64-sha256.txt
        asset_name: tippy-osx-x64-sha256.txt
        asset_content_type: text/plain
